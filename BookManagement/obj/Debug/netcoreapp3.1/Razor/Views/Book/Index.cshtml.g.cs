#pragma checksum "D:\VS_Net2\BookManage\BookManagement\Views\Book\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "df3f72da77a5235bb2c2fdc8a3fdc0c5c5fbeb99"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Book_Index), @"mvc.1.0.view", @"/Views/Book/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\VS_Net2\BookManage\BookManagement\Views\_ViewImports.cshtml"
using BookManagement;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\VS_Net2\BookManage\BookManagement\Views\_ViewImports.cshtml"
using BookManagement.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\VS_Net2\BookManage\BookManagement\Views\Book\Index.cshtml"
using BookManagement.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\VS_Net2\BookManage\BookManagement\Views\Book\Index.cshtml"
using Microsoft.EntityFrameworkCore;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"df3f72da77a5235bb2c2fdc8a3fdc0c5c5fbeb99", @"/Views/Book/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3a3096475496e018f050ad657f055d832dbd214d", @"/Views/_ViewImports.cshtml")]
    public class Views_Book_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "10", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "20", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "50", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "100", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Book", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "D:\VS_Net2\BookManage\BookManagement\Views\Book\Index.cshtml"
  
    BookManagementDbContext db = _context;
    List<Category> lstCategory = db.Categories.ToList();
    Layout = "_LayoutManage";
    ViewBag.Title = "";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""card"">
    <div class=""card-header"">
        <div class=""float-left"">
            <button type=""button"" class=""btn btn-primary btnAddNew"" data-toggle=""modal"" data-target=""#CreateOrUpdateModal""><i class=""fa fa-plus"">&nbsp;Thêm mới</i></button>
        </div>
        <div class=""float-right frame-header"">
            <input placeholder=""Tìm kiếm ..."" name=""Keyword"" />
            <button type=""button"" class=""btn btn-primary btnSearch""><i class=""fa fa-search"">&nbsp;Tìm kiếm</i></button>
        </div>
    </div>
    <div class=""card-body"">
        <div class=""row"">
            <div class=""col-10"" style=""display:none"">
                Số bản ghi/trang:&nbsp;
                <select name=""ValuePage"">
                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df3f72da77a5235bb2c2fdc8a3fdc0c5c5fbeb996362", async() => {
                WriteLiteral("10");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df3f72da77a5235bb2c2fdc8a3fdc0c5c5fbeb997537", async() => {
                WriteLiteral("20");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df3f72da77a5235bb2c2fdc8a3fdc0c5c5fbeb998712", async() => {
                WriteLiteral("30");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df3f72da77a5235bb2c2fdc8a3fdc0c5c5fbeb999887", async() => {
                WriteLiteral("40");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                </select>\r\n            </div>\r\n            <div class=\"col-2 text-right\">\r\n                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df3f72da77a5235bb2c2fdc8a3fdc0c5c5fbeb9911157", async() => {
                WriteLiteral("Quay lại danh sách");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n            </div>\r\n        </div>\r\n        <div");
            BeginWriteAttribute("class", " class=\"", 1442, "\"", 1450, 0);
            EndWriteAttribute();
            WriteLiteral(@" style=""width:100%; margin-top:10px;"">
            <table id=""TBLDANHSACH"" class=""table table-bordered table-sm"">
                <thead class=""thead-light"">
                    <tr>
                        <th class=""text-center"" style=""width:50px;"">STT</th>
                        <th class=""text-center"" style=""width:180px;"">Tên sách</th>
                        <th class=""text-center"" style=""width:160px;"">Tác giả</th>
                        <th class=""text-center"" style=""width:360px;"">Mô tả</th>
                        <th class=""text-center""></th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        <div class=""loader"" id=""loader1""></div>
    </div>
</div>

<div class=""modal"" data-backdrop=""static"" id=""CreateOrUpdateModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog  modal-lg"" role=""document"">
        <div class=""modal-content");
            WriteLiteral(@""">
            <div class=""modal-header"">
                <h4 class=""modal-title inline-block"" id=""exampleModalLabel""><i class='fa fa-list-alt' aria-hidden='true'></i>&nbsp;Cập nhật thông tin sách</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-content"" style=""border:none; margin: 10px auto;"">
                <input name=""BookId"" class=""hide"" style=""display:none"" />
                <div");
            BeginWriteAttribute("class", " class=\"", 3058, "\"", 3066, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                    <div class=""col-md-3""><span>Tên sách:<span style=""color:red"">*</span>&nbsp;</span></div>
                    <div class=""col-md-12""><input name=""BookName"" placeholder=""Tên sách"" class=""form-control"" /></div>
                </div>
                <div");
            BeginWriteAttribute("class", " class=\"", 3344, "\"", 3352, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                    <div class=\"col-md-3\"><span>Tác giả:&nbsp;</span></div>\r\n                    <div class=\"col-md-12\"><input name=\"Author\" placeholder=\"Tác giả\" class=\"form-control\" /></div>\r\n                </div>\r\n                <div");
            BeginWriteAttribute("class", " class=\"", 3594, "\"", 3602, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                    <div class=""col-md-3""><span>Số chương:&nbsp;</span></div>
                    <div class=""col-md-12""><input type=""number"" name=""TotalChapter"" placeholder=""Số chương"" class=""form-control"" /></div>
                </div>
                <div");
            BeginWriteAttribute("class", " class=\"", 3868, "\"", 3876, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n                    <div class=\"col-md-3\"><span>Thể loại:&nbsp;</span></div>\r\n                    <div");
            BeginWriteAttribute("class", " class=\"", 3982, "\"", 3990, 0);
            EndWriteAttribute();
            WriteLiteral(" style=\"display:flex; font-size:14px; flex-wrap:wrap;\">\r\n");
#nullable restore
#line 81 "D:\VS_Net2\BookManage\BookManagement\Views\Book\Index.cshtml"
                         foreach (var item in lstCategory)
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <div class=\"col-md-3\">\r\n                                <input type=\"checkbox\" data-id=\"");
#nullable restore
#line 84 "D:\VS_Net2\BookManage\BookManagement\Views\Book\Index.cshtml"
                                                           Write(item.CategoryId);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" class=\"category\"");
            BeginWriteAttribute("name", " name=\"", 4285, "\"", 4321, 1);
#nullable restore
#line 84 "D:\VS_Net2\BookManage\BookManagement\Views\Book\Index.cshtml"
WriteAttributeValue("", 4292, "Category"+item.CategoryId, 4292, 29, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            BeginWriteAttribute("id", " id=\"", 4322, "\"", 4356, 1);
#nullable restore
#line 84 "D:\VS_Net2\BookManage\BookManagement\Views\Book\Index.cshtml"
WriteAttributeValue("", 4327, "Category"+item.CategoryId, 4327, 29, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" />\r\n                                <label");
            BeginWriteAttribute("for", " for=\"", 4400, "\"", 4435, 1);
#nullable restore
#line 85 "D:\VS_Net2\BookManage\BookManagement\Views\Book\Index.cshtml"
WriteAttributeValue("", 4406, "Category"+item.CategoryId, 4406, 29, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" style=\"cursor:pointer\">");
#nullable restore
#line 85 "D:\VS_Net2\BookManage\BookManagement\Views\Book\Index.cshtml"
                                                                                             Write(item.CategoryName);

#line default
#line hidden
#nullable disable
            WriteLiteral("</label>\r\n                            </div>\r\n");
#nullable restore
#line 87 "D:\VS_Net2\BookManage\BookManagement\Views\Book\Index.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </div>\r\n                </div>\r\n                <div");
            BeginWriteAttribute("class", " class=\"", 4623, "\"", 4631, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                    <div class=""col-md-3""><span>Hình ảnh:&nbsp;</span></div>
                    <div class=""col-md-3"" style=""display:none""><img name=""Avatar"" src=""#"" alt=""ảnh"" width=""150px"" height=""200px"" style=""margin: 5px 0px;""/></div>
                    <div class=""col-md-3""><input type=""file"" name=""BookImage"" placeholder=""Hình ảnh"" class=""form-control-file"" accept=""image/*""/></div>
                </div>
                <div");
            BeginWriteAttribute("class", " class=\"", 5073, "\"", 5081, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                    <div class=""col-sm-3""><span>Mô tả:&nbsp;</span></div>
                    <div class=""col-sm-12"">
                        <textarea class=""form-control"" name=""Description"" placeholder=""Mô tả"" rows=""4""></textarea>
                    </div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary btnSave"">Lưu lại</button>
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Đóng</button>
            </div>
        </div>
    </div>
</div>

<div class=""modal"" data-backdrop=""static"" id=""Chapter"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog  modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title inline-block"" id=""exampleModalLabel""><i class='fa fa-list-alt' aria-hidden='true'></i>&nbsp;Quản lý thông tin chư");
            WriteLiteral(@"ơng</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-content container"" style=""border:none; margin: 10px auto;"">
                <div class=""float-left"">
                    <button type=""button"" class=""btn btn-primary btnAddNewChapter"" data-toggle=""modal"" data-target=""#CreateOrUpdateChapter""><i class=""fa fa-plus"">&nbsp;Thêm mới</i></button>
                </div>
                <div");
            BeginWriteAttribute("class", " class=\"", 6686, "\"", 6694, 0);
            EndWriteAttribute();
            WriteLiteral(@" style=""width:100%; margin-top:10px;"">
                    <input name=""BookId"" style=""display:none"" />
                    <table id=""TBLDANHSACHCHAPTER"" class=""table table-bordered table-sm"">
                        <thead class=""thead-light"">
                            <tr>
                                <th class=""text-center"" style=""width:50px;"">STT</th>
                                <th class=""text-center"" style=""width:270px;"">Tên chương</th>
                                <th class=""text-center"" style=""width:200px;"">Số lượt xem</th>
                                <th class=""text-center""></th>
                            </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>
                <div class=""loader"" id=""loader2""></div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Đóng</butt");
            WriteLiteral(@"on>
            </div>
        </div>
    </div>
</div>

<div class=""modal"" data-backdrop=""static"" id=""CreateOrUpdateChapter"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog  modal-lg"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title inline-block"" id=""exampleModalLabel""><i class='fa fa-list-alt' aria-hidden='true'></i>&nbsp;Cập nhật thông tin chương</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-content"" style=""border:none; margin: 10px auto;"">
                <input name=""ChapterId"" class=""hide"" style=""display:none"" />
                <div");
            BeginWriteAttribute("class", " class=\"", 8615, "\"", 8623, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                    <div class=""col-md-3""><span>Tên chương:<span style=""color:red"">*</span>&nbsp;</span></div>
                    <div class=""col-md-12""><input name=""ChapterName"" placeholder=""Tên chương"" class=""form-control"" /></div>
                </div>
                <div");
            BeginWriteAttribute("class", " class=\"", 8908, "\"", 8916, 0);
            EndWriteAttribute();
            WriteLiteral(@">
                    <div class=""col-md-3""><span>Nội dung:&nbsp;</span></div>
                    <div class=""col-md-12""><textarea name=""Content"" placeholder=""Nội dung"" class=""form-control"" rows=""30"" ></textarea></div>
                </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary btnSaveChapter"">Lưu lại</button>
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Đóng</button>
            </div>
        </div>
    </div>
</div>

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $modal = $('#CreateOrUpdateModal');
        $(document).ready(function () { //Sau khi load xong html
            function LoadContentSearch(pageNum) {
                this.Keyword = $('input[name=Keyword]').val(); //Lấy giá trị của ô input[name=Keyword] : giá trị tìm kiếm
                this.ValuePage = $('select[name=ValuePage]').val(); //Lấy giá trị của ô select[name=ValuePage] : số bản ghi trong 1 trang
                this.PageNum = pageNum //trang số
            }

            function GetListCate() {
                let lstCate = [];
                $modal.find("".category[type=checkbox]:checked"").each(function () {
                    let id = $(this).data('id');
                    if (id > 0) {
                        lstCate.push(id);
                    }
                })
                return lstCate;
            }

            function Book() {
                this.bookId = ($('input[name=BookId]').val() || 0);
                this.bookName = $('inp");
                WriteLiteral(@"ut[name=BookName]').val();
                this.author = $('input[name=Author]').val();
                this.totalChapter = ($('input[name=TotalChapter]').val() || 1);
                //image
                //this.image = """";
                this.description = $('[name=Description]').val();
                this.isCompleted = false;
                //category
            }

            function Chapter() {
                this.ChapterId = ($('input[name=ChapterId]').val() || 0);
                this.ChapterName = $('input[name=ChapterName]').val();
                this.BookId = $chapterModal.Self.find('input[name=BookId]').val();
                this.Content = $('[name=Content]').val();
            }

            var $danhmuc = {
                init: function () {
                    $danhmuc.LoadDanhSach(1);
                    $danhmuc.SearchClick();
                },
                $thisPage: $('.card'),
                SearchClick: function () {
                    $danhmuc.$thi");
                WriteLiteral(@"sPage.find('.btnSearch').off('click').on('click', function () { $danhmuc.LoadDanhSach(1); }); //Sự kiện khi click vào nút có class btnSearch
                },
                LoadDanhSach: function (pageNum) {
                    var dataSend = new LoadContentSearch(pageNum);
                    var getResponse = AjaxConfig.sendRequestToServer(""/Book/GetList"", ""GET"", dataSend); //Gọi vào controller Category, hàm Getlist, truyền vào DataSend
                    getResponse.then(function (response) { //getResponse thực hiện xong thì thực hiện funtion với tham số truyền vào là response - kết quả trả về của AjaxConfig.sendRequestToServer(""/Category/GetList"", ""GET"", dataSend);
                        if (response.header.msgType == BoxType.Success) {
                            $danhmuc.PageCurrent = pageNum;
                            var htmlContent = """";
                            response.data = response.data || [];
                            if (response.data.length == 0) {
                     ");
                WriteLiteral(@"           htmlContent = '<tr><td colspan=""10"" class=""text-center"">Không có dữ liệu.</td></tr>';
                                document.getElementById(""loader1"").style.display = ""none"";
                                $danhmuc.$thisPage.find('table#TBLDANHSACH tbody').html(htmlContent);
                                $('.countItem').text(response.data.length);
                                $('.pagination-page').html('');
                                return false;
                            }
                            for (var i = 0; i < response.data.length; i++) {
                                var $Item = response.data[i];
                                htmlContent += '<tr>' +
                                    '<td class=""text-center"">' + (i + 1) + '</td>' +
                                    '<td class=""text-center"">' + ($Item.bookName || '') + '</td>' +
                                    '<td class=""text-center"">' + ($Item.author || '') + '</td>' +
                           ");
                WriteLiteral(@"         '<td class=""text-center"">' + ($Item.description || '') + '</td>' +
                                    '<td class=""text-center"">' +
                                        '<button type=""button"" class=""btn btn-primary btn-sm btnChapter"" style=""margin-right: 5px;"" data-id=""' + $Item.bookId + '""><i class=""fa fa-list-ul"">&nbsp;Chương</i></button>' +
                                        '<button type=""button"" class=""btn btn-secondary btn-sm btnEdit"" style=""margin-right: 5px;"" data-id=""' + $Item.bookId + '""><i class=""fa fa-pencil-square-o"">&nbsp;Sửa</i></button>' +
                                        '<button type=""button"" class=""btn btn-danger btn-sm btnDelete"" style=""margin-top: 5px;"" data-id=""' + $Item.bookId + '""><i class=""fa fa-trash-o"">&nbsp;Xóa</i></button>' +
                                    '</td >' +
                                    '</tr>';
                            }
                            document.getElementById(""loader1"").style.display = ""none"";
                 ");
                WriteLiteral(@"           htmlContent = $ValidateXSS.sanitizeHtmlTable([htmlContent]);
                            $danhmuc.$thisPage.find('table#TBLDANHSACH tbody').html(htmlContent);
                            $('.countItem').text(response.data.length);
                            $danhmuc.DeleteClick();
                            $danhmuc.EditClick();
                            $danhmuc.ChapterClick();
                            /*LoadPaginationPage($danhmuc.$thisPage, $danhmuc.LoadDanhSach, response.Body.TotalRowData, response.Body.Data.length, pageNum, valuePage || 100);*/
                        } else {
                            $msgDialog.confirm(response.header.msgType, null, response.body.description, null, null, null);
                        }
                    }).catch(function (xhr) {
                        AjaxConfig.CatchError(xhr);
                    });
                },
                EditClick: function () {
                    $('.btnEdit').off('click').on('click', function ()");
                WriteLiteral(@" {
                        let id = $(this).data('id');
                        if (id > 0) {
                            let dataSend = { ""id"": id };
                            var getResponse = AjaxConfig.sendRequestToServer(""Book/GetBook"", ""GET"", dataSend);
                            getResponse.then(function (response) {
                                if (response.header.msgType == BoxType.Success) {
                                    let item = response.data;
                                    let lstCate = item.lstCate;
                                    $('input[name=BookId]').val(item.bookId);
                                    $('input[name=BookName]').val(item.bookName);
                                    $('input[name=Author]').val(item.author);
                                    $('input[name=TotalChapter]').val(item.totalChapter);
                                    //image
                                    if (item.bookImage != null) {
                                  ");
                WriteLiteral(@"      $('img[name=Avatar]').attr('src', item.bookImage);
                                        $('img[name=Avatar]').parent().css('display', 'block');
                                    }
                                    $('[name=Description]').val(item.description);
                                    //category
                                    for (let cateId of lstCate) {
                                        let name = ""Category"" + cateId;
                                        $modal.find(`input[name=${name}]`).prop('checked', true);
                                        /*$modal.find('input[name='+name+']').prop('checked', true);*/
                                    }
                                    $modal.modal('show');
                                }
                                else {
                                    $msgDialog.confirm(""orange"", null, ""Thông tin yêu cầu không hợp lệ"", null, null, null);
                                }
                      ");
                WriteLiteral(@"      }).catch(function (xhr) {
                                AjaxConfig.CatchError(xhr);
                            });
                        }
                    })
                },
                DeleteClick: function () {
                    $('.btnDelete').off('click').on('click', function () {
                        let id = $(this).data('id');
                        if (id > 0) {
                            $.confirm({
                                title: 'XÁC NHẬN THÔNG TIN',
                                content: ""Bạn có chắc chắn muốn xóa không?"",
                                type: 'orange',
                                typeAnimated: true,
                                columnClass: 'col-md-6 col-md-offset-0',
                                container: $('.card'),
                                buttons: {
                                    OK: {
                                        text: '<i class=""fa fa-trash""></i>&nbsp;Xóa',
                          ");
                WriteLiteral(@"              btnClass: ""btn-primary"",
                                        action: function () {
                                            let _self = this;
                                            let dataSend = { ""id"": id }; // lấy được id của Category
                                            var getResponse = AjaxConfig.sendRequestToServer(""Book/Delete"", ""GET"", dataSend);
                                            getResponse.then(function (response) {
                                                if (response.header.msgType == BoxType.Success) {
                                                    $danhmuc.LoadDanhSach(1);
                                                    $msgDialog.confirm(response.header.msgType, null, response.description, null, null, null);
                                                }
                                                else {
                                                    $msgDialog.confirm(response.header.msgType, null, response.descr");
                WriteLiteral(@"iption, null, null, null);
                                                }
                                            }).catch(function (xhr) {
                                                AjaxConfig.CatchError(xhr);
                                            });
                                        }
                                    },
                                    close: {
                                        text: '<i class=""fa fa-close""></i>&nbsp;Đóng',
                                        action: function () {
                                        }
                                    }
                                }
                            });
                        }
                    })
                },
                ChapterClick: function () {
                    $('.btnChapter').off('click').on('click', function () {
                        let id = $(this).data('id');
                        if (id > 0) {
                            $cha");
                WriteLiteral(@"pterModal.LoadDanhSachChapter(id);
                        }
                    })
                },
            };
            $danhmuc.init();


            var $updateModal = {
                init: function () {
                    $updateModal.OpenModal();
                    $updateModal.CloseModal();
                    $updateModal.CreateOrUpdate();
                    $updateModal.FileChange();
                },
                OpenModal: function () {
                    $modal.on('shown.bs.modal', function () {
                        let id = ($modal.find('input[name=BookId]').val() || 0);
                        if (id == 0) {
                            $updateModal.ResetModal();
                        }
                    })
                },
                CloseModal: function () {
                    $modal.on('hidden.bs.modal', function () {
                        $updateModal.ResetModal();
                    })
                },
                ResetMod");
                WriteLiteral(@"al: function () {
                    $modal.find('input').not('[type=checkbox]').val("""");
                    $modal.find('input[type=checkbox]').prop('checked', false);
                    $modal.find('textarea').val("""");
                    $('img[name=Avatar]').attr('src', '#');
                    $('img[name=Avatar]').parent().css('display', 'none');
                },
                LoadDataSend: function () {
                    let dataForm = new FormData();
                    let item = new Book();
                    if (item.BookName == """") {
                        $msgDialog.confirm(""orange"", null, ""Vui lòng nhập tên sách"", null, null, null);
                        return false;
                    };
                    dataForm.append('generalInfo', JSON.stringify(item));
                    let $file = $modal.find('input[type=file]');
                    let file = $file[0].files[0];
                    dataForm.append('file', file);
                    let lstCate = GetL");
                WriteLiteral(@"istCate();
                    dataForm.append('lstCate', JSON.stringify(lstCate));
                    return dataForm;
                },
                CreateOrUpdate: function () {
                    $modal.find('.btnSave').off('click').on('click', function () {
                        let dataSend = $updateModal.LoadDataSend();
                        if (dataSend) {
                            let id = ($('input[name=BookId]').val() || 0);
                            let url = (id == 0 || id == """") ? ""/Book/AddNew"" : ""/Book/Update"";
                            var getResponse = AjaxConfig.sendRequestFileToServer(url, ""Post"", dataSend);
                            getResponse.then(function (response) {
                                if (response.header.msgType == BoxType.Success) {
                                    $danhmuc.LoadDanhSach(1);
                                    $msgDialog.confirm(response.header.msgType, null, response.description, null, null, null);
                   ");
                WriteLiteral(@"                 $('#CreateOrUpdateModal').modal('hide');
                                }
                                else {
                                    $msgDialog.confirm(response.header.msgType, null, response.description, null, null, null);
                                }
                            }).catch(function (xhr) {
                                AjaxConfig.CatchError(xhr);
                            });
                        }
                    })
                },
                FileChange: function () {
                    $modal.find('input[type=file]').on('change', function () {
                        var file = $(this)[0].files[0]
                        if (file) {
                            if (file.size > 2 * 1024 * 1024) {
                                $msgDialog.confirm(""orange"", null, ""Ảnh tải lên không vượt quá 2MB"", null, null, null);
                                $(this).val('').trigger('change');
                                return");
                WriteLiteral(@" false;
                            }
                            $('img[name=Avatar]').attr('src', '#');
                            $('img[name=Avatar]').parent().css('display', 'none');
                        }
                    })
                }
            };
            $updateModal.init();

            var $chapterModal = {
                Self: $('#Chapter'),
                LoadDanhSachChapter: function (bookId) {
                    let dataSend = { ""bookId"": bookId };
                    var getResponse = AjaxConfig.sendRequestToServer(""Chapter/GetList"", ""GET"", dataSend);
                    getResponse.then(function (response) {
                        if (response.header.msgType == BoxType.Success) {
                            $chapterModal.Self.find('input[name=BookId]').val(bookId);
                            var htmlContent = """";
                            response.data = response.data || [];
                            if (response.data.length == 0) {
           ");
                WriteLiteral(@"                     htmlContent = '<tr><td colspan=""10"" class=""text-center"">Không có dữ liệu.</td></tr>';
                                document.getElementById(""loader2"").style.display = ""none"";
                                $chapterModal.Self.find('table#TBLDANHSACHCHAPTER tbody').html(htmlContent);
                                $('.countItem').text(response.data.length);
                                $('.pagination-page').html('');
                                $chapterModal.Self.modal('show');
                                return false;
                            }
                            for (var i = 0; i < response.data.length; i++) {
                                var $Item = response.data[i];
                                htmlContent += '<tr>' +
                                    '<td class=""text-center"">' + (i + 1) + '</td>' +
                                    '<td class=""text-center"">' + ($Item.chapterName || '') + '</td>' +
                                    '<t");
                WriteLiteral(@"d class=""text-center"">' + ($Item.totalView || '0') + '</td>' +
                                    '<td class=""text-center"">' +
                                    '<button type=""button"" class=""btn btn-secondary btn-sm btnEditChapter"" style=""margin-right: 5px;"" data-id=""' + $Item.chapterId + '""><i class=""fa fa-pencil-square-o"">&nbsp;Sửa</i></button>' +
                                    '<button type=""button"" class=""btn btn-danger btn-sm btnDeleteChapter"" data-id=""' + $Item.chapterId + '""><i class=""fa fa-trash-o"">&nbsp;Xóa</i></button>' +
                                    '</td >' +
                                    '</tr>';
                            }
                            document.getElementById(""loader2"").style.display = ""none"";
                            htmlContent = $ValidateXSS.sanitizeHtmlTable([htmlContent]);
                            $chapterModal.Self.find('table#TBLDANHSACHCHAPTER tbody').html(htmlContent);
                            $('.countItem').text(response.data.le");
                WriteLiteral(@"ngth);
                            $chapterModal.DeleteClick();
                            $chapterModal.EditClick();
                            $chapterModal.Self.modal('show');
                        }
                        else {
                            $msgDialog.confirm(response.header.msgType, null, response.body.description, null, null, null);
                        }
                    }).catch(function (xhr) {
                        AjaxConfig.CatchError(xhr);
                    });
                },
                EditClick: function () {
                    $('.btnEditChapter').off('click').on('click', function () {
                        let id = $(this).data('id');
                        if (id > 0) {
                            let dataSend = { ""id"": id };
                            var getResponse = AjaxConfig.sendRequestToServer(""Chapter/GetChapter"", ""GET"", dataSend);
                            getResponse.then(function (response) {
                       ");
                WriteLiteral(@"         if (response.header.msgType == BoxType.Success) {
                                    let item = response.data;
                                    $updateChapterModal.Self.find('input[name=ChapterId]').val(item.chapterId);
                                    $updateChapterModal.Self.find('input[name=ChapterName]').val(item.chapterName);
                                    $updateChapterModal.Self.find('[name=Content]').val(item.content);
                                    $updateChapterModal.Self.modal('show');
                                }
                                else {
                                    $msgDialog.confirm(""orange"", null, ""Thông tin yêu cầu không hợp lệ"", null, null, null);
                                }
                            }).catch(function (xhr) {
                                AjaxConfig.CatchError(xhr);
                            });
                        }
                    })
                },
                DeleteClick: functi");
                WriteLiteral(@"on () {
                    $('.btnDeleteChapter').off('click').on('click', function () {
                        let id = $(this).data('id');
                        if (id > 0) {
                            $.confirm({
                                title: 'XÁC NHẬN THÔNG TIN',
                                content: ""Bạn có chắc chắn muốn xóa không?"",
                                type: 'orange',
                                typeAnimated: true,
                                columnClass: 'col-md-6 col-md-offset-0',
                                container: $('.card'),
                                buttons: {
                                    OK: {
                                        text: '<i class=""fa fa-trash""></i>&nbsp;Xóa',
                                        btnClass: ""btn-primary"",
                                        action: function () {
                                            let _self = this;
                                            let dataSend = {");
                WriteLiteral(@" ""id"": id };
                                            var getResponse = AjaxConfig.sendRequestToServer(""Chapter/Delete"", ""GET"", dataSend);
                                            getResponse.then(function (response) {
                                                if (response.header.msgType == BoxType.Success) {
                                                    let bookId = $chapterModal.Self.find('input[name=BookId]').val();
                                                    $chapterModal.LoadDanhSachChapter(bookId);
                                                    $msgDialog.confirm(response.header.msgType, null, response.description, null, null, null);
                                                }
                                                else {
                                                    $msgDialog.confirm(response.header.msgType, null, response.description, null, null, null);
                                                }
                                    ");
                WriteLiteral(@"        }).catch(function (xhr) {
                                                AjaxConfig.CatchError(xhr);
                                            });
                                        }
                                    },
                                    close: {
                                        text: '<i class=""fa fa-close""></i>&nbsp;Đóng',
                                        action: function () {
                                        }
                                    }
                                }
                            });
                        }
                    })
                },
            }
            

            var $updateChapterModal = {
                init: function () {
                    $updateChapterModal.OpenModal();
                    $updateChapterModal.CloseModal();
                    $updateChapterModal.CreateOrUpdate();
                },
                Self: $('#CreateOrUpdateChapter'),
             ");
                WriteLiteral(@"   OpenModal: function () {
                    $updateChapterModal.Self.on('shown.bs.modal', function () {
                        let id = ($updateChapterModal.Self.find('input[name=ChapterId]').val() || 0);
                        if (id == 0) {
                            $updateChapterModal.ResetModal();
                        }
                    })
                },
                CloseModal: function () {
                    $updateChapterModal.Self.on('hidden.bs.modal', function () {
                        $updateChapterModal.ResetModal();
                    })
                },
                ResetModal: function () {
                    $updateChapterModal.Self.find('input').val("""");
                    $updateChapterModal.Self.find('textarea').val("""");
                },
                LoadDataSend: function () {
                    let item = new Chapter();
                    if (item.ChapterName == """") {
                        $msgDialog.confirm(""orange"", null, ""Vu");
                WriteLiteral(@"i lòng nhập tên chương"", null, null, null);
                        return false;
                    };
                    return item;
                },
                CreateOrUpdate: function () {
                    $updateChapterModal.Self.find('.btnSaveChapter').off('click').on('click', function () {
                        let dataSend = $updateChapterModal.LoadDataSend();
                        if (dataSend) {
                            let id = ($updateChapterModal.Self.find('input[name=ChapterId]').val() || 0);
                            let url = (id == 0 || id == """") ? ""/Chapter/AddNew"" : ""/Chapter/Update"";
                            var getResponse = AjaxConfig.sendRequestToServer(url, ""Post"", dataSend);
                            getResponse.then(function (response) {
                                if (response.header.msgType == BoxType.Success) {
                                    let bookId = $chapterModal.Self.find('input[name=BookId]').val();
                        ");
                WriteLiteral(@"            $chapterModal.LoadDanhSachChapter(bookId);
                                    $msgDialog.confirm(response.header.msgType, null, response.description, null, null, null);
                                    $updateChapterModal.Self.modal('hide');
                                }
                                else {
                                    $msgDialog.confirm(response.header.msgType, null, response.description, null, null, null);
                                }
                            }).catch(function (xhr) {
                                AjaxConfig.CatchError(xhr);
                            });
                        }
                    })
                },
            }
            $updateChapterModal.init();
        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public BookManagementDbContext _context { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
